y_true
# MLE
ipw_logit_sample <- nonprob(selection = ~ X1 + X2 + X3 + X4,
target = ~ Y,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit")
cbind(ipw_logit_sample$output,ipw_logit_sample$confidence_interval)
summary(ipw_logit_sample)
# GEE
ipw_logit_sample_gee <- nonprob(selection = ~ X1 + X2 + X3 + X4,
target = ~ Y,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_selection = controlSel(est_method_sel = "gee", h = 2))
cbind(ipw_logit_sample_gee$output,ipw_logit_sample_gee$confidence_interval)
# MI
mi_sample_nn <- nonprob(outcome = Y ~ X3 + X4 + X5 + X6,
data = sample_B,
svydesign = sample_A_svy,
method_outcome = "nn",
family_outcome = "gaussian",
control_outcome = controlOut(k = 3))
cbind(mi_sample_nn$output,mi_sample_nn$confidence_interval)
mi_sample_pmm <- nonprob(outcome = Y ~ X3 + X4 + X5 + X6,
data = sample_B,
svydesign = sample_A_svy,
method_outcome = "pmm",
family_outcome = "gaussian")
cbind(mi_sample_pmm$output,mi_sample_pmm$confidence_interval)
mi_sample <- nonprob(outcome = Y ~ X3 + X4 + X5 + X6,
data = sample_B,
svydesign = sample_A_svy,
method_outcome = "glm",
family_outcome = "gaussian")
cbind(mi_sample$output,mi_sample$confidence_interval)
# DR
# with mle and glm
dr_logit_sample_mle <- nonprob(selection = ~ X1 + X2 + X3 + X4,
outcome = Y ~ X1 + X2 + X3 + X4,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
verbose = TRUE)
cbind(dr_logit_sample_mle$output,dr_logit_sample_mle$confidence_interval)
# with glm and calibration approach
dr_logit_sample_gee <- nonprob(selection = ~ X1 + X2 + X3 + X4,
outcome = Y ~ X1 + X2 + X3 + X4,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_selection = controlSel(est_method_sel = "gee", h = 1),
verbose = TRUE)
cbind(dr_logit_sample_gee$output,dr_logit_sample_gee$confidence_interval)
# bias minimization
# TODO
dr_logit_sample_mm <- nonprob(selection = ~ X1 + X2 + X3 + X4,
outcome = Y ~ X1 + X2 + X3 + X4,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
verbose = TRUE,
control_inference = controlInf(bias_correction = TRUE))
cbind(dr_logit_sample_mm$output,dr_logit_sample_mm$confidence_interval)
# Variable Selection
# MLE SCAD
ipw_logit_sample_scad <- nonprob(selection = ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
target = ~ Y,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_selection = controlSel(penalty = "SCAD"),
control_inference = controlInf(vars_selection = TRUE,
num_boot = 50),
verbose = TRUE)
cbind(ipw_logit_sample_scad$output,ipw_logit_sample_scad$confidence_interval)
# MI SCAD
mi_sample_scad <- nonprob(outcome = Y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sample_B,
svydesign = sample_A_svy,
method_outcome = "glm",
family_outcome = "gaussian",
control_outcome = controlOut(penalty = "SCAD"),
control_inference = controlInf(vars_selection = TRUE),
verbose = TRUE)
cbind(mi_sample_scad$output,mi_sample_scad$confidence_interval)
# DR SCAD
dr_logit_sample_scad <- nonprob(selection = ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
outcome = Y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_selection = controlSel(penalty = "SCAD"),
control_inference = controlInf(vars_selection = TRUE),
verbose = TRUE)
cbind(dr_logit_sample_scad$output, dr_logit_sample_scad$confidence_interval)
# TODO
# must be run on dev version
dr_logit_sample_mm_scad <- nonprob(selection = ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
outcome = Y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_selection = controlSel(penalty = "SCAD"),
control_inference = controlInf(vars_selection = TRUE,
bias_correction = TRUE),
verbose = TRUE)
cbind(dr_logit_sample_mm_scad$output, dr_logit_sample_mm_scad$confidence_interval)
# Bootstrap Variance
ipw_logit_sample_gee_boot <- nonprob(selection = ~ X1 + X2 + X3 + X4,
target = ~ Y,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_inference = controlInf(var_method = "bootstrap", num_boot = 100),
verbose = TRUE)
cbind(ipw_logit_sample_gee_boot$output,ipw_logit_sample_gee_boot$confidence_interval)
# MI
mi_sample_nn_boot <- nonprob(outcome = Y ~ X3 + X4 + X5 + X6,
data = sample_B,
svydesign = sample_A_svy,
method_outcome = "glm",
family_outcome = "gaussian",
control_inference = controlInf(var_method = "bootstrap", num_boot = 100),
verbose = TRUE)
cbind(mi_sample_nn$output,mi_sample_nn$confidence_interval)
# DR
dr_logit_sample_mle_boot <- nonprob(selection = ~ X1 + X2 + X3 + X4,
outcome = Y ~ X1 + X2 + X3 + X4,
data = sample_B,
svydesign = sample_A_svy,
method_selection = "logit",
control_inference = controlInf(var_method = "bootstrap", num_boot = 50),
verbose = TRUE)
cbind(dr_logit_sample_mle_boot$output,dr_logit_sample_mle_boot$confidence_interval)
tab_res <- rbind(
cbind(est="ipw with sample", ipw_logit_sample$output,ipw_logit_sample$confidence_interval),
cbind(est="ipw with sample (gee h=1)" , ipw_logit_sample_gee$output,ipw_logit_sample_gee$confidence_interval),
cbind(est="ipw with sample (gee h=1 bootstrap)" , ipw_logit_sample_gee_boot$output,ipw_logit_sample_gee_boot$confidence_interval),
cbind(est="ipw with sample SCAD" , ipw_logit_sample_scad$output,ipw_logit_sample_scad$confidence_interval),
cbind(est="mi with sample (glm)" , mi_sample$output,mi_sample$confidence_interval),
cbind(est="mi with sample (nn)" , mi_sample_nn$output,mi_sample_nn$confidence_interval),
cbind(est="mi with sample (pmm)" , mi_sample_pmm$output,mi_sample_pmm$confidence_interval),
cbind(est="mi with sample (glm) SCAD" , mi_sample_scad$output, mi_sample_scad$confidence_interval),
cbind(est="mi with sample (nn bootstrap)" , mi_sample_nn_boot$output, mi_sample_nn_boot$confidence_interval),
cbind(est="dr with sample (glm)" , dr_logit_sample_mle$output,dr_logit_sample_mle$confidence_interval),
cbind(est="dr with sample (gee h=1)" , dr_logit_sample_gee$output,dr_logit_sample_gee$confidence_interval),
cbind(est="dr with sample (bias min)" , dr_logit_sample_mm$output,dr_logit_sample_mm$confidence_interval),
cbind(est="dr with sample (mle) SCAD" , dr_logit_sample_scad$output,dr_logit_sample_scad$confidence_interval),
cbind(est="dr with sample (bias min) SCAD", dr_logit_sample_mm_scad$output, dr_logit_sample_mm_scad$confidence_interval),
cbind(est="dr with sample (mle bootstrap) ", dr_logit_sample_mle_boot$output, dr_logit_sample_mle_boot$confidence_interval)
)
tab_res
ggplot(data = tab_res, aes(x = est, y = mean, ymin = lower_bound, ymax = upper_bound)) +
geom_point() +
geom_pointrange() +
geom_hline(yintercept = y_true, linetype = "dashed", color = "red") +
coord_flip()
?nonprob
ggplot(data = tab_res, aes(x = est, y = mean, ymin = lower_bound, ymax = upper_bound)) +
geom_point() +
geom_pointrange() +
geom_hline(yintercept = y_true, linetype = "dashed", color = "red") +
coord_flip()
y_naive <- mean(sample_B$Y)
ggplot(data = tab_res, aes(x = est, y = mean, ymin = lower_bound, ymax = upper_bound)) +
geom_point() +
geom_pointrange() +
geom_hline(yintercept = y_true, linetype = "dashed", color = "green") +
geom_hline(yintercept = y_naive, linetype = "dashed", color = "red") +
coord_flip()
ggplot(data = tab_res, aes(x = est, y = mean, ymin = lower_bound, ymax = upper_bound)) +
geom_point() +
geom_pointrange() +
geom_hline(yintercept = y_true, linetype = "dashed", color = "darkgreen") +
geom_hline(yintercept = y_naive, linetype = "dashed", color = "red") +
coord_flip()
setwd("/Users/lukaszchrostowski/Desktop/Workshop-on-Survey-Statistics-2024-nonprobsvy")
## ----reading-jvs-----------------------------------------------------------------------------------------------------
jvs <- read.csv("data-raw/jvs.csv",
colClasses = c("character", "numeric", rep("character", 3), "numeric"))
head(jvs)
## ----svydesign-------------------------------------------------------------------------------------------------------
jvs_svy <- svydesign(ids = ~ 1,  ## stratified sampling (no clustering)
weights = ~ weight,  ## final weight
strata = ~ size + nace + region, ## stratification variables
data = jvs
#,calibrate.formula = ~ size + nace + region ## if weights are calibrated to known population sizes in these variables see: https://cran.r-project.org/web/packages/survey/vignettes/precalibrated.pdf
)
svytotal(~size, jvs_svy)
## ----wczytanie2------------------------------------------------------------------------------------------------------
admin <- read.csv("data-raw/admin.csv",
colClasses = c("character", "numeric", rep("character", 3), "logical")
)
head(admin)
## ----ipw-stadnard----------------------------------------------------------------------------------------------------
est1_logit <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "logit"
)
est1_probit <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "probit"
)
est1_cloglog <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "cloglog"
)
est_ipw_standard <- rbind(cbind(est1_logit$output, est1_logit$confidence_interval),
cbind(est1_probit$output, est1_probit$confidence_interval),
cbind(est1_cloglog$output, est1_cloglog$confidence_interval))
est_ipw_standard$est <- "ipw"
rownames(est_ipw_standard) <- NULL
est_ipw_standard
## ----ipw-struktura---------------------------------------------------------------------------------------------------
str(est1_logit,1)
## ----ipw-struktura-sel-----------------------------------------------------------------------------------------------
str(est1_logit$selection,1)
## ----ipw-summary-----------------------------------------------------------------------------------------------------
summary(est1_logit)
## ----ipw-cal---------------------------------------------------------------------------------------------------------
est2_logit <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
control_selection = controlSel(h = 1, est_method_sel = "gee")
)
est2_probit <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "probit",
control_selection = controlSel(h = 1, est_method_sel = "gee")
)
est2_cloglog <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "cloglog",
control_selection = controlSel(h = 1, est_method_sel = "gee")
)
est_ipw_calib <- rbind(cbind(est2_logit$output, est2_logit$confidence_interval),
cbind(est2_probit$output, est2_probit$confidence_interval),
cbind(est2_cloglog$output, est2_cloglog$confidence_interval))
est_ipw_calib$est <- "ipw calib"
rownames(est_ipw_calib) <- NULL
est_ipw_calib
## ----ipw-cal-wagi----------------------------------------------------------------------------------------------------
admin$ipw1_weight <- est1_logit$weights
admin$ipw2_weight <- est2_logit$weights
## ----ipw-cal-totale--------------------------------------------------------------------------------------------------
c(jvs=sum(weights(jvs_svy)), ipw1_mle=sum(admin$ipw1_weight), ipw2_gee=sum(admin$ipw2_weight))
## ----ipw-cal-klasa1--------------------------------------------------------------------------------------------------
svytotal(~size, jvs_svy)
## ----ipw-cal-klasa2--------------------------------------------------------------------------------------------------
xtabs(ipw1_weight ~ size, admin)
xtabs(ipw2_weight ~ size, admin)
## ----ipw-bootstrap---------------------------------------------------------------------------------------------------
set.seed(2024-4-24)
est3_logit <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
control_inference = controlInf(var_method = "bootstrap", num_boot = 50),
verbose = T,
)
## ----ipw-bootstrap-summary-------------------------------------------------------------------------------------------
summary(est3_logit)
## ----ipw-scad--------------------------------------------------------------------------------------------------------
set.seed(2024-4-24)
est4_logit <- nonprob(
selection = ~ region + private + nace + size,
target = ~ single_shift,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
control_selection = controlSel(nfolds = 5, nlambda = 10),
control_inference = controlInf(vars_selection = TRUE),
verbose = TRUE
)
## ----ipw-scad-summary------------------------------------------------------------------------------------------------
summary(est4_logit)
## ----ipw-porowanie---------------------------------------------------------------------------------------------------
ipw_summary <- rbind(cbind(est1_logit$output, est1_logit$confidence_interval),
cbind(est2_logit$output, est2_logit$confidence_interval),
cbind(est3_logit$output, est3_logit$confidence_interval),
cbind(est4_logit$output, est4_logit$confidence_interval))
rownames(ipw_summary) <- NULL
ipw_summary$est <- c("ipw (st)", "ipw (cal)", "ipw (boot)", "ipw (scad)")
ipw_summary
## ----mi-glm-lp-------------------------------------------------------------------------------------------------------
est5_glm <- nonprob(
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_outcome = "glm",
family_outcome = "gaussian"
)
cbind(est5_glm$output,est5_glm$confidence_interval)
## ----mi-glm-binom----------------------------------------------------------------------------------------------------
est5_glm_biom <- nonprob(
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_outcome = "glm",
family_outcome = "binomial"
)
cbind(est5_glm_biom$output,est5_glm_biom$confidence_interval)
## ----mi-glm-binom-summary--------------------------------------------------------------------------------------------
summary(est5_glm_biom)
## ----mi-glm-binom-struktura------------------------------------------------------------------------------------------
str(est5_glm_biom$outcome,1)
## ----mi-glm-nn-------------------------------------------------------------------------------------------------------
est6_glm_nn <- nonprob(
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_outcome = "nn",
control_outcome = controlOut(k=5)
)
cbind(est6_glm_nn$output,est6_glm_nn$confidence_interval)
## ----mi-glm-pmm-1----------------------------------------------------------------------------------------------------
set.seed(2023-12-8)
est6_glm_pmm1 <- nonprob(
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_outcome = "pmm",
control_outcome = controlOut(k=5, predictive_match=1),
verbose = TRUE
)
cbind(est6_glm_pmm1$output, est6_glm_pmm1$confidence_interval)
## ----mi-glm-pmm-2----------------------------------------------------------------------------------------------------
set.seed(2023-12-8)
est6_glm_pmm2 <- nonprob(
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_outcome = "pmm",
control_outcome = controlOut(k=5, predictive_match=2),
verbose = TRUE
)
cbind(est6_glm_pmm2$output, est6_glm_pmm2$confidence_interval)
## ----mi-glm-scad-----------------------------------------------------------------------------------------------------
set.seed(2024-4-24)
est7_glm_sel <- nonprob(
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_outcome = "glm",
family_outcome = "binomial",
control_outcome = controlOut(nfolds = 5, nlambda = 10),
control_inference = controlInf(vars_selection = TRUE),
verbose = TRUE
)
## ----mi-glm-scad-wynik-----------------------------------------------------------------------------------------------
cbind(est7_glm_sel$output,est7_glm_sel$confidence_interval)
## ----mi-glm-scad-summary---------------------------------------------------------------------------------------------
summary(est7_glm_sel)
## ----mi-posumowanie--------------------------------------------------------------------------------------------------
mi_summary <- rbind(cbind(est5_glm$output, est5_glm$confidence_interval),
cbind(est5_glm_biom$output, est5_glm_biom$confidence_interval),
cbind(est6_glm_nn$output, est6_glm_nn$confidence_interval),
cbind(est6_glm_pmm1$output, est6_glm_pmm1$confidence_interval),
cbind(est6_glm_pmm2$output, est6_glm_pmm2$confidence_interval),
cbind(est7_glm_sel$output, est7_glm_sel$confidence_interval))
rownames(mi_summary) <- NULL
mi_summary$est <- c("mi (lm)", "mi (glm)", "mi (nn)", "mi (pmm1)", "mi (pmm2)", "mi (glm, scad)")
mi_summary
## ----dr-glm-binom----------------------------------------------------------------------------------------------------
est8_dr1 <- nonprob(
selection = ~ region + private + nace + size,
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
method_outcome = "glm",
family_outcome = "binomial",
pop_size = sum(weights(jvs_svy))
)
cbind(est8_dr1$output,est8_dr1$confidence_interval)
## ----dr-glm-binom-summary--------------------------------------------------------------------------------------------
summary(est8_dr1)
## ----dr-glm-binom-struktura------------------------------------------------------------------------------------------
str(est8_dr1,1)
## ----dr-glm-calib----------------------------------------------------------------------------------------------------
est8_dr2 <- nonprob(
selection = ~ region + private + nace + size,
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
method_outcome = "glm",
family_outcome = "binomial",
control_selection = controlSel(h = 1, est_method_sel = "gee")
)
cbind(est8_dr2$output,est8_dr2$confidence_interval)
## ----dr-glm-bootstrap------------------------------------------------------------------------------------------------
set.seed(2024-4-24)
est8_dr3 <- nonprob(
selection = ~ region + private + nace + size,
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
method_outcome = "glm",
family_outcome = "binomial",
control_inference = controlInf(var_method = "bootstrap", num_boot = 50),
verbose = TRUE
)
cbind(est8_dr3$output,est8_dr3$confidence_interval)
## ----dr-glm-scad-----------------------------------------------------------------------------------------------------
set.seed(2024-4-24)
est9_dr1 <- nonprob(
selection = ~ region + private + nace + size,
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
method_outcome = "glm",
family_outcome = "binomial",
control_selection = controlSel(nfolds = 5, nlambda = 10),
control_outcome = controlOut(nfolds = 5, nlambda = 10),
control_inference = controlInf(vars_selection = TRUE),
verbose = TRUE
)
cbind(est9_dr1$output,est9_dr1$confidence_interval)
## ----dr-glm-scad-bias-min--------------------------------------------------------------------------------------------
set.seed(2024-4-24)
est9_dr2 <- nonprob(
selection = ~ region + private + nace + size,
outcome = single_shift ~ region + private + nace + size,
svydesign = jvs_svy,
data = admin,
method_selection = "logit",
method_outcome = "glm",
family_outcome = "binomial",
control_selection = controlSel(nfolds = 5, nlambda = 10),
control_outcome = controlOut(nfolds = 5, nlambda = 10),
control_inference = controlInf(vars_selection = TRUE, bias_correction = TRUE),
verbose = TRUE
)
cbind(est9_dr2$output,est9_dr2$confidence_interval)
## ----dr-podsumowanie-------------------------------------------------------------------------------------------------
dr_summary <- rbind(cbind(est8_dr1$output, est8_dr1$confidence_interval),
cbind(est8_dr2$output, est8_dr2$confidence_interval),
cbind(est8_dr3$output, est8_dr3$confidence_interval),
cbind(est9_dr1$output, est9_dr1$confidence_interval),
cbind(est9_dr2$output, est9_dr2$confidence_interval))
rownames(dr_summary) <- NULL
dr_summary$est <- c("dr (ipw)", "dr (ipw cal)", "dr (ipw, boot)", "dr (scad)", "dr (scad, min)")
dr_summary
## ----wykres-na-koniec------------------------------------------------------------------------------------------------
wyniki <- rbind(ipw_summary, mi_summary, dr_summary)
ggplot(data = wyniki, aes(y = est, x = mean, xmin = lower_bound, xmax = upper_bound)) +
geom_point() +
geom_vline(xintercept = mean(admin$single_shift), linetype = "dotted", color = "red") +
geom_errorbar() +
labs(x = "Point estimator and confidence interval", y = "estimators")
head(jvs)
head(admin)
est_ipw_standard
est_ipw_calib
## ----ipw-cal-weights----------------------------------------------------------------------------------------------------
admin$ipw1_weight <- est1_logit$weights
admin$ipw2_weight <- est2_logit$weights
## ----ipw-cal-totals--------------------------------------------------------------------------------------------------
c(jvs=sum(weights(jvs_svy)), ipw1_mle=sum(admin$ipw1_weight), ipw2_gee=sum(admin$ipw2_weight))
## ----ipw-cal-klasa1--------------------------------------------------------------------------------------------------
svytotal(~size, jvs_svy)
## ----ipw-cal-klasa2--------------------------------------------------------------------------------------------------
xtabs(ipw1_weight ~ size, admin)
xtabs(ipw2_weight ~ size, admin)
## ----ipw-scad-summary------------------------------------------------------------------------------------------------
summary(est4_logit)
ipw_summary
cbind(est5_glm$output,est5_glm$confidence_interval)
## ----mi-glm-binom-summary--------------------------------------------------------------------------------------------
summary(est5_glm_biom)
cbind(est6_glm_nn$output,est6_glm_nn$confidence_interval)
cbind(est6_glm_pmm1$output, est6_glm_pmm1$confidence_interval)
cbind(est6_glm_pmm2$output, est6_glm_pmm2$confidence_interval)
## ----mi-glm-scad-summary---------------------------------------------------------------------------------------------
summary(est7_glm_sel)
## ----mi-glm-scad-result-----------------------------------------------------------------------------------------------
cbind(est7_glm_sel$output,est7_glm_sel$confidence_interval)
mi_summary
dr_summary
## ----summary-plot------------------------------------------------------------------------------------------------
wyniki <- rbind(ipw_summary, mi_summary, dr_summary)
## ----ipw-summary-----------------------------------------------------------------------------------------------------
summary(est1_logit)
?controlSel
?controlOut
?controlInf
?controlSel
